name: Reusable workflow
on:
  workflow_call:
jobs:
  deploy:
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v4
        - name: Downloading elys
          run: |
            URL=https://github.com/elys-network/elys/releases/download/v0.30.0/elysd-v0.30.0-linux-amd64
            wget $URL -O elysd
            chmod +x elysd
        - name: Set up Rust
          uses: actions-rs/toolchain@v1
          with:
            profile: minimal
            toolchain: stable
        - name: Compile
          run: |
              VERSION=$(cat .version)
              sed -i "s/^version = .*/version = \"$VERSION\"/" contracts/account-history-contract/Cargo.toml
              sed -i "s/^version = .*/version = \"$VERSION\"/" contracts/trade-shield-contract/Cargo.toml
              sed -i "s/^version = .*/version = \"$VERSION\"/" contracts/financial-snapshot-contract/Cargo.toml
              cargo update
              
              docker run --rm -v "$(pwd)":/code \
              --mount type=volume,source="$(basename "$(pwd)")_cache",target=/target \
              --mount type=volume,source=registry_cache,target=/usr/local/cargo/registry \
              cosmwasm/workspace-optimizer:0.14.0
        - name: Deploy
          run: |
            # helper functions
            extract_txhash() { awk -F 'txhash: ' '/txhash:/{print $2; exit}'; }
            extract_code_id() { awk -F 'key: code_id|value: ' '/key: code_id/ { getline; gsub(/"/, "", $2); print $2; exit }'; }
            extract_contract_address() { awk -F 'key: _contract_address|value: ' '/key: _contract_address/ { getline; gsub(/"/, "", $2); print $2; exit }'; }
            extract_account_number() { awk -F 'account_number: ' '/account_number:/ { gsub(/"/, "", $2); print $2 + 0; exit; }'; }
            extract_sequence() { awk -F 'sequence: ' '/sequence:/ { gsub(/"/, "", $2); print $2 + 0; exit; }'; }
